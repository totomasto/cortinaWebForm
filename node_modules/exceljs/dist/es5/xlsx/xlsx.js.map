{"version":3,"sources":["../../../lib/xlsx/xlsx.js"],"names":["fs","require","ZipStream","StreamBuf","PromiseLib","utils","XmlStream","StylesXform","CoreXform","SharedStringsXform","RelationshipsXform","ContentTypesXform","AppXform","WorkbookXform","WorksheetXform","DrawingXform","theme1Xml","XLSX","module","exports","workbook","fsReadFileAsync","filename","options","Promise","resolve","reject","readFile","error","data","RelType","prototype","self","stream","exists","then","Error","createReadStream","read","close","parseRels","xform","parseStream","parseWorkbook","parseSharedStrings","reconcile","model","workbookXform","worksheetXform","drawingXform","drawingOptions","media","mediaIndex","Object","keys","drawings","forEach","name","drawing","drawingRel","drawingRels","rels","reduce","o","rel","Id","sheetOptions","styles","sharedStrings","date1904","properties","worksheets","worksheet","relationships","worksheetRels","sheetNo","worksheetHash","globalRels","workbookRels","sheetDefs","processWorksheetEntry","entry","match","path","push","undefined","processWorksheetRelsEntry","processMediaEntry","lastDot","lastIndexOf","extension","substr","streamBuf","on","length","medium","type","buffer","toBuffer","pipe","processDrawingEntry","processDrawingRelsEntry","processThemeEntry","themes","toString","processIgnoreEntry","autodrain","createInputStream","promises","ZipReader","getEntryType","promise","entryPath","sheets","definedNames","views","appXform","appProperties","assign","company","manager","coreXform","coreProperties","destroy","all","emit","zipStream","load","base64","Buffer","write","end","addMedia","zip","map","append","dataimg64","content","substring","indexOf","addDrawings","relsXform","prepare","xml","toXml","addContentTypes","addApp","addCore","addThemes","theme1","addOfficeRels","Type","OfficeDocument","Target","CoreProperties","ExtenderProperties","addWorkbookRels","count","Styles","Theme","SharedStrings","rId","Worksheet","id","addSharedStrings","addStyles","addWorkbook","addWorksheets","relationshipsXform","xmlStream","render","_finalize","finalize","prepareModel","creator","lastModifiedBy","created","Date","modified","useSharedStrings","useStyles","Mock","worksheetOptions","drawingsCount","ZipWriter","afters","writeFile","createWriteStream","writeBuffer"],"mappings":"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","sourcesContent":["'use strict';\n\nconst fs = require('fs');\nconst ZipStream = require('../utils/zip-stream');\nconst StreamBuf = require('../utils/stream-buf');\nconst PromiseLib = require('../utils/promise');\n\nconst utils = require('../utils/utils');\nconst XmlStream = require('../utils/xml-stream');\n\nconst StylesXform = require('./xform/style/styles-xform');\n\nconst CoreXform = require('./xform/core/core-xform');\nconst SharedStringsXform = require('./xform/strings/shared-strings-xform');\nconst RelationshipsXform = require('./xform/core/relationships-xform');\nconst ContentTypesXform = require('./xform/core/content-types-xform');\nconst AppXform = require('./xform/core/app-xform');\nconst WorkbookXform = require('./xform/book/workbook-xform');\nconst WorksheetXform = require('./xform/sheet/worksheet-xform');\nconst DrawingXform = require('./xform/drawing/drawing-xform');\n\nconst theme1Xml = require('./xml/theme1.js');\n\nconst XLSX = (module.exports = function(workbook) {\n  this.workbook = workbook;\n});\n\nfunction fsReadFileAsync(filename, options) {\n  return new PromiseLib.Promise((resolve, reject) => {\n    fs.readFile(filename, options, (error, data) => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(data);\n      }\n    });\n  });\n}\n\nXLSX.RelType = require('./rel-type');\n\nXLSX.prototype = {\n  // ===============================================================================\n  // Workbook\n  // =========================================================================\n  // Read\n\n  readFile(filename, options) {\n    const self = this;\n    let stream;\n    return utils.fs\n      .exists(filename)\n      .then(exists => {\n        if (!exists) {\n          throw new Error(`File not found: ${filename}`);\n        }\n        stream = fs.createReadStream(filename);\n        return self.read(stream, options).catch(error => {\n          stream.close();\n          throw error;\n        });\n      })\n      .then(workbook => {\n        stream.close();\n        return workbook;\n      });\n  },\n  parseRels(stream) {\n    const xform = new RelationshipsXform();\n    return xform.parseStream(stream);\n  },\n  parseWorkbook(stream) {\n    const xform = new WorkbookXform();\n    return xform.parseStream(stream);\n  },\n  parseSharedStrings(stream) {\n    const xform = new SharedStringsXform();\n    return xform.parseStream(stream);\n  },\n  reconcile(model, options) {\n    const workbookXform = new WorkbookXform();\n    const worksheetXform = new WorksheetXform(options);\n    const drawingXform = new DrawingXform();\n\n    workbookXform.reconcile(model);\n\n    // reconcile drawings with their rels\n    const drawingOptions = {\n      media: model.media,\n      mediaIndex: model.mediaIndex,\n    };\n    Object.keys(model.drawings).forEach(name => {\n      const drawing = model.drawings[name];\n      const drawingRel = model.drawingRels[name];\n      if (drawingRel) {\n        drawingOptions.rels = drawingRel.reduce((o, rel) => {\n          o[rel.Id] = rel;\n          return o;\n        }, {});\n        drawingXform.reconcile(drawing, drawingOptions);\n      }\n    });\n\n    const sheetOptions = {\n      styles: model.styles,\n      sharedStrings: model.sharedStrings,\n      media: model.media,\n      mediaIndex: model.mediaIndex,\n      date1904: model.properties && model.properties.date1904,\n      drawings: model.drawings,\n    };\n    model.worksheets.forEach(worksheet => {\n      worksheet.relationships = model.worksheetRels[worksheet.sheetNo];\n      worksheetXform.reconcile(worksheet, sheetOptions);\n    });\n\n    // delete unnecessary parts\n    delete model.worksheetHash;\n    delete model.worksheetRels;\n    delete model.globalRels;\n    delete model.sharedStrings;\n    delete model.workbookRels;\n    delete model.sheetDefs;\n    delete model.styles;\n    delete model.mediaIndex;\n    delete model.drawings;\n    delete model.drawingRels;\n  },\n  processWorksheetEntry(entry, model, options) {\n    const match = entry.path.match(/xl\\/worksheets\\/sheet(\\d+)[.]xml/);\n    if (match) {\n      const sheetNo = match[1];\n      const xform = new WorksheetXform(options);\n      return xform.parseStream(entry).then(worksheet => {\n        worksheet.sheetNo = sheetNo;\n        model.worksheetHash[entry.path] = worksheet;\n        model.worksheets.push(worksheet);\n      });\n    }\n    return undefined;\n  },\n  processWorksheetRelsEntry(entry, model) {\n    const match = entry.path.match(/xl\\/worksheets\\/_rels\\/sheet(\\d+)[.]xml.rels/);\n    if (match) {\n      const sheetNo = match[1];\n      const xform = new RelationshipsXform();\n      return xform.parseStream(entry).then(relationships => {\n        model.worksheetRels[sheetNo] = relationships;\n      });\n    }\n    return undefined;\n  },\n  processMediaEntry(entry, model) {\n    const match = entry.path.match(/xl\\/media\\/([a-zA-Z0-9]+[.][a-zA-Z0-9]{3,4})$/);\n    if (match) {\n      const filename = match[1];\n      const lastDot = filename.lastIndexOf('.');\n      if (lastDot === -1) {\n        // if we can't determine extension, ignore it\n        return undefined;\n      }\n      const extension = filename.substr(lastDot + 1);\n      const name = filename.substr(0, lastDot);\n      return new PromiseLib.Promise((resolve, reject) => {\n        const streamBuf = new StreamBuf();\n        streamBuf.on('finish', () => {\n          model.mediaIndex[filename] = model.media.length;\n          model.mediaIndex[name] = model.media.length;\n          const medium = {\n            type: 'image',\n            name,\n            extension,\n            buffer: streamBuf.toBuffer(),\n          };\n          model.media.push(medium);\n          resolve();\n        });\n        entry.on('error', error => {\n          reject(error);\n        });\n        entry.pipe(streamBuf);\n      });\n    }\n    return undefined;\n  },\n  processDrawingEntry(entry, model) {\n    const match = entry.path.match(/xl\\/drawings\\/([a-zA-Z0-9]+)[.]xml/);\n    if (match) {\n      const name = match[1];\n      const xform = new DrawingXform();\n      return xform.parseStream(entry).then(drawing => {\n        model.drawings[name] = drawing;\n      });\n    }\n    return undefined;\n  },\n  processDrawingRelsEntry(entry, model) {\n    const match = entry.path.match(/xl\\/drawings\\/_rels\\/([a-zA-Z0-9]+)[.]xml[.]rels/);\n    if (match) {\n      const name = match[1];\n      const xform = new RelationshipsXform();\n      return xform.parseStream(entry).then(relationships => {\n        model.drawingRels[name] = relationships;\n      });\n    }\n    return undefined;\n  },\n  processThemeEntry(entry, model) {\n    const match = entry.path.match(/xl\\/theme\\/([a-zA-Z0-9]+)[.]xml/);\n    if (match) {\n      return new PromiseLib.Promise((resolve, reject) => {\n        const name = match[1];\n        // TODO: stream entry into buffer and store the xml in the model.themes[]\n        const stream = new StreamBuf();\n        entry.on('error', reject);\n        stream.on('error', reject);\n        stream.on('finish', () => {\n          model.themes[name] = stream.read().toString();\n          resolve();\n        });\n        entry.pipe(stream);\n      });\n    }\n    return undefined;\n  },\n  processIgnoreEntry(entry) {\n    entry.autodrain();\n  },\n  createInputStream(options) {\n    const self = this;\n    const model = {\n      worksheets: [],\n      worksheetHash: {},\n      worksheetRels: [],\n      themes: {},\n      media: [],\n      mediaIndex: {},\n      drawings: {},\n      drawingRels: {},\n    };\n\n    // we have to be prepared to read the zip entries in whatever order they arrive\n    const promises = [];\n    const stream = new ZipStream.ZipReader({\n      getEntryType: path => (path.match(/xl\\/media\\//) ? 'nodebuffer' : 'string'),\n    });\n    stream.on('entry', entry => {\n      let promise = null;\n\n      let entryPath = entry.path;\n      if (entryPath[0] === '/') {\n        entryPath = entryPath.substr(1);\n      }\n      switch (entryPath) {\n        case '_rels/.rels':\n          promise = self.parseRels(entry).then(relationships => {\n            model.globalRels = relationships;\n          });\n          break;\n\n        case 'xl/workbook.xml':\n          promise = self.parseWorkbook(entry).then(workbook => {\n            model.sheets = workbook.sheets;\n            model.definedNames = workbook.definedNames;\n            model.views = workbook.views;\n            model.properties = workbook.properties;\n          });\n          break;\n\n        case 'xl/_rels/workbook.xml.rels':\n          promise = self.parseRels(entry).then(relationships => {\n            model.workbookRels = relationships;\n          });\n          break;\n\n        case 'xl/sharedStrings.xml':\n          model.sharedStrings = new SharedStringsXform();\n          promise = model.sharedStrings.parseStream(entry);\n          break;\n\n        case 'xl/styles.xml':\n          model.styles = new StylesXform();\n          promise = model.styles.parseStream(entry);\n          break;\n\n        case 'docProps/app.xml': {\n          const appXform = new AppXform();\n          promise = appXform.parseStream(entry).then(appProperties => {\n            Object.assign(model, {\n              company: appProperties.company,\n              manager: appProperties.manager,\n            });\n          });\n          break;\n        }\n\n        case 'docProps/core.xml': {\n          const coreXform = new CoreXform();\n          promise = coreXform.parseStream(entry).then(coreProperties => {\n            Object.assign(model, coreProperties);\n          });\n          break;\n        }\n\n        default:\n          promise =\n            self.processWorksheetEntry(entry, model, options) ||\n            self.processWorksheetRelsEntry(entry, model) ||\n            self.processThemeEntry(entry, model) ||\n            self.processMediaEntry(entry, model) ||\n            self.processDrawingEntry(entry, model) ||\n            self.processDrawingRelsEntry(entry, model) ||\n            self.processIgnoreEntry(entry);\n          break;\n      }\n\n      if (promise) {\n        promise = promise.catch(error => {\n          stream.destroy(error);\n          throw error;\n        });\n\n        promises.push(promise);\n        promise = null;\n      }\n    });\n    stream.on('finished', () => {\n      PromiseLib.Promise.all(promises)\n        .then(() => {\n          self.reconcile(model, options);\n\n          // apply model\n          self.workbook.model = model;\n        })\n        .then(() => {\n          stream.emit('done');\n        })\n        .catch(error => {\n          stream.emit('error', error);\n        });\n    });\n    return stream;\n  },\n\n  read(stream, options) {\n    options = options || {};\n    const self = this;\n    const zipStream = this.createInputStream(options);\n    return new PromiseLib.Promise((resolve, reject) => {\n      zipStream\n        .on('done', () => {\n          resolve(self.workbook);\n        })\n        .on('error', error => {\n          reject(error);\n        });\n      stream.pipe(zipStream);\n    });\n  },\n\n  load(data, options) {\n    const self = this;\n    if (options === undefined) {\n      options = {};\n    }\n    const zipStream = this.createInputStream();\n    return new PromiseLib.Promise((resolve, reject) => {\n      zipStream\n        .on('done', () => {\n          resolve(self.workbook);\n        })\n        .on('error', error => {\n          reject(error);\n        });\n\n      if (options.base64) {\n        const buffer = new Buffer(data.toString(), 'base64');\n        zipStream.write(buffer);\n      } else {\n        zipStream.write(data);\n      }\n      zipStream.end();\n    });\n  },\n\n  // =========================================================================\n  // Write\n\n  addMedia(zip, model) {\n    return PromiseLib.Promise.all(\n      model.media.map(medium => {\n        if (medium.type === 'image') {\n          const filename = `xl/media/${medium.name}.${medium.extension}`;\n          if (medium.filename) {\n            return fsReadFileAsync(medium.filename).then(data => {\n              zip.append(data, { name: filename });\n            });\n          }\n          if (medium.buffer) {\n            return new PromiseLib.Promise(resolve => {\n              zip.append(medium.buffer, { name: filename });\n              resolve();\n            });\n          }\n          if (medium.base64) {\n            return new PromiseLib.Promise(resolve => {\n              const dataimg64 = medium.base64;\n              const content = dataimg64.substring(dataimg64.indexOf(',') + 1);\n              zip.append(content, { name: filename, base64: true });\n              resolve();\n            });\n          }\n        }\n        return PromiseLib.Promise.reject(new Error('Unsupported media'));\n      })\n    );\n  },\n\n  addDrawings(zip, model) {\n    const drawingXform = new DrawingXform();\n    const relsXform = new RelationshipsXform();\n    const promises = [];\n\n    model.worksheets.forEach(worksheet => {\n      const {drawing} = worksheet;\n      if (drawing) {\n        promises.push(\n          new PromiseLib.Promise(resolve => {\n            drawingXform.prepare(drawing, {});\n            let xml = drawingXform.toXml(drawing);\n            zip.append(xml, { name: `xl/drawings/${drawing.name}.xml` });\n\n            xml = relsXform.toXml(drawing.rels);\n            zip.append(xml, { name: `xl/drawings/_rels/${drawing.name}.xml.rels` });\n\n            resolve();\n          })\n        );\n      }\n    });\n\n    return PromiseLib.Promise.all(promises);\n  },\n\n  addContentTypes(zip, model) {\n    return new PromiseLib.Promise(resolve => {\n      const xform = new ContentTypesXform();\n      const xml = xform.toXml(model);\n      zip.append(xml, { name: '[Content_Types].xml' });\n      resolve();\n    });\n  },\n\n  addApp(zip, model) {\n    return new PromiseLib.Promise(resolve => {\n      const xform = new AppXform();\n      const xml = xform.toXml(model);\n      zip.append(xml, { name: 'docProps/app.xml' });\n      resolve();\n    });\n  },\n\n  addCore(zip, model) {\n    return new PromiseLib.Promise(resolve => {\n      const coreXform = new CoreXform();\n      zip.append(coreXform.toXml(model), { name: 'docProps/core.xml' });\n      resolve();\n    });\n  },\n\n  addThemes(zip, model) {\n    return new PromiseLib.Promise(resolve => {\n      const themes = model.themes || { theme1: theme1Xml };\n      Object.keys(themes).forEach(name => {\n        const xml = themes[name];\n        const path = `xl/theme/${name}.xml`;\n        zip.append(xml, { name: path });\n      });\n      resolve();\n    });\n  },\n\n  addOfficeRels(zip) {\n    return new PromiseLib.Promise(resolve => {\n      const xform = new RelationshipsXform();\n      const xml = xform.toXml([\n        { Id: 'rId1', Type: XLSX.RelType.OfficeDocument, Target: 'xl/workbook.xml' },\n        { Id: 'rId2', Type: XLSX.RelType.CoreProperties, Target: 'docProps/core.xml' },\n        { Id: 'rId3', Type: XLSX.RelType.ExtenderProperties, Target: 'docProps/app.xml' },\n      ]);\n      zip.append(xml, { name: '_rels/.rels' });\n      resolve();\n    });\n  },\n\n  addWorkbookRels(zip, model) {\n    let count = 1;\n    const relationships = [\n      { Id: `rId${count++}`, Type: XLSX.RelType.Styles, Target: 'styles.xml' },\n      { Id: `rId${count++}`, Type: XLSX.RelType.Theme, Target: 'theme/theme1.xml' },\n    ];\n    if (model.sharedStrings.count) {\n      relationships.push({ Id: `rId${count++}`, Type: XLSX.RelType.SharedStrings, Target: 'sharedStrings.xml' });\n    }\n    model.worksheets.forEach(worksheet => {\n      worksheet.rId = `rId${count++}`;\n      relationships.push({ Id: worksheet.rId, Type: XLSX.RelType.Worksheet, Target: `worksheets/sheet${worksheet.id}.xml` });\n    });\n    return new PromiseLib.Promise(resolve => {\n      const xform = new RelationshipsXform();\n      const xml = xform.toXml(relationships);\n      zip.append(xml, { name: 'xl/_rels/workbook.xml.rels' });\n      resolve();\n    });\n  },\n  addSharedStrings(zip, model) {\n    if (!model.sharedStrings || !model.sharedStrings.count) {\n      return PromiseLib.Promise.resolve();\n    }\n    return new PromiseLib.Promise(resolve => {\n      zip.append(model.sharedStrings.xml, { name: 'xl/sharedStrings.xml' });\n      resolve();\n    });\n  },\n  addStyles(zip, model) {\n    return new PromiseLib.Promise(resolve => {\n      const {xml} = model.styles;\n      if (xml) {\n        zip.append(xml, { name: 'xl/styles.xml' });\n      }\n      resolve();\n    });\n  },\n  addWorkbook(zip, model) {\n    return new PromiseLib.Promise(resolve => {\n      const xform = new WorkbookXform();\n      zip.append(xform.toXml(model), { name: 'xl/workbook.xml' });\n      resolve();\n    });\n  },\n  addWorksheets(zip, model) {\n    return new PromiseLib.Promise(resolve => {\n      // preparation phase\n      const worksheetXform = new WorksheetXform();\n      const relationshipsXform = new RelationshipsXform();\n\n      // write sheets\n      model.worksheets.forEach(worksheet => {\n        let xmlStream = new XmlStream();\n        worksheetXform.render(xmlStream, worksheet);\n        zip.append(xmlStream.xml, { name: `xl/worksheets/sheet${worksheet.id}.xml` });\n\n        if (worksheet.rels && worksheet.rels.length) {\n          xmlStream = new XmlStream();\n          relationshipsXform.render(xmlStream, worksheet.rels);\n          zip.append(xmlStream.xml, { name: `xl/worksheets/_rels/sheet${worksheet.id}.xml.rels` });\n        }\n      });\n\n      resolve();\n    });\n  },\n  _finalize(zip) {\n    return new PromiseLib.Promise((resolve, reject) => {\n      zip.on('finish', () => {\n        resolve(this);\n      });\n      zip.on('error', reject);\n      zip.finalize();\n    });\n  },\n  prepareModel(model, options) {\n    // ensure following properties have sane values\n    model.creator = model.creator || 'ExcelJS';\n    model.lastModifiedBy = model.lastModifiedBy || 'ExcelJS';\n    model.created = model.created || new Date();\n    model.modified = model.modified || new Date();\n\n    model.useSharedStrings = options.useSharedStrings !== undefined ? options.useSharedStrings : true;\n    model.useStyles = options.useStyles !== undefined ? options.useStyles : true;\n\n    // Manage the shared strings\n    model.sharedStrings = new SharedStringsXform();\n\n    // add a style manager to handle cell formats, fonts, etc.\n    model.styles = model.useStyles ? new StylesXform(true) : new StylesXform.Mock();\n\n    // prepare all of the things before the render\n    const workbookXform = new WorkbookXform();\n    const worksheetXform = new WorksheetXform();\n\n    workbookXform.prepare(model);\n\n    const worksheetOptions = {\n      sharedStrings: model.sharedStrings,\n      styles: model.styles,\n      date1904: model.properties.date1904,\n      drawingsCount: 0,\n      media: model.media,\n    };\n    worksheetOptions.drawings = model.drawings = [];\n    model.worksheets.forEach(worksheet => {\n      worksheetXform.prepare(worksheet, worksheetOptions);\n    });\n\n    // TODO: workbook drawing list\n  },\n  write(stream, options) {\n    options = options || {};\n    const {model} = this.workbook;\n    const zip = new ZipStream.ZipWriter();\n    zip.pipe(stream);\n\n    this.prepareModel(model, options);\n\n    // render\n    return PromiseLib.Promise.resolve()\n      .then(() => this.addContentTypes(zip, model))\n      .then(() => this.addOfficeRels(zip, model))\n      .then(() => this.addWorkbookRels(zip, model))\n      .then(() => this.addWorksheets(zip, model))\n      .then(() => this.addSharedStrings(zip, model)) // always after worksheets\n      .then(() => this.addDrawings(zip, model))\n      .then(() => {\n        const promises = [this.addThemes(zip, model), this.addStyles(zip, model)];\n        return PromiseLib.Promise.all(promises);\n      })\n      .then(() => this.addMedia(zip, model))\n      .then(() => {\n        const afters = [this.addApp(zip, model), this.addCore(zip, model)];\n        return PromiseLib.Promise.all(afters);\n      })\n      .then(() => this.addWorkbook(zip, model))\n      .then(() => this._finalize(zip));\n  },\n  writeFile(filename, options) {\n    const self = this;\n    const stream = fs.createWriteStream(filename);\n\n    return new PromiseLib.Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        resolve();\n      });\n      stream.on('error', error => {\n        reject(error);\n      });\n\n      self\n        .write(stream, options)\n        .then(() => {\n          stream.end();\n        })\n        .catch(error => {\n          reject(error);\n        });\n    });\n  },\n  writeBuffer(options) {\n    const self = this;\n    const stream = new StreamBuf();\n    return self.write(stream, options).then(() => stream.read());\n  },\n};\n"],"file":"xlsx.js"}
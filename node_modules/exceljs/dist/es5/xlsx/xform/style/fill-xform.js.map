{"version":3,"sources":["../../../../../lib/xlsx/xform/style/fill-xform.js"],"names":["utils","require","BaseXform","ColorXform","StopXform","map","color","inherits","tag","render","xmlStream","model","openNode","addAttribute","position","closeNode","parseOpen","node","parser","name","parseFloat","attributes","parseText","parseClose","undefined","PatternFillXform","fgColor","bgColor","pattern","type","patternType","text","GradientFillXform","stop","gradient","degree","center","left","right","top","bottom","stopXform","stops","forEach","stopModel","parseInt","push","FillXform","module","exports","patternFill","gradientFill","addRollback","rollback","commit","validPatternValues","reduce","p","v","validStyle","value","validStyleValues"],"mappings":"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","sourcesContent":["'use strict';\n\nconst utils = require('../../../utils/utils');\nconst BaseXform = require('../base-xform');\n\nconst ColorXform = require('./color-xform');\n\nconst StopXform = function() {\n  this.map = {\n    color: new ColorXform(),\n  };\n};\n\nutils.inherits(StopXform, BaseXform, {\n  get tag() {\n    return 'stop';\n  },\n\n  render(xmlStream, model) {\n    xmlStream.openNode('stop');\n    xmlStream.addAttribute('position', model.position);\n    this.map.color.render(xmlStream, model.color);\n    xmlStream.closeNode();\n  },\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'stop':\n        this.model = {\n          position: parseFloat(node.attributes.position),\n        };\n        return true;\n      case 'color':\n        this.parser = this.map.color;\n        this.parser.parseOpen(node);\n        return true;\n      default:\n        return false;\n    }\n  },\n  parseText() {},\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.model.color = this.parser.model;\n        this.parser = undefined;\n      }\n      return true;\n    }\n    return false;\n  },\n});\n\nconst PatternFillXform = function() {\n  this.map = {\n    fgColor: new ColorXform('fgColor'),\n    bgColor: new ColorXform('bgColor'),\n  };\n};\nutils.inherits(PatternFillXform, BaseXform, {\n  get name() {\n    return 'pattern';\n  },\n  get tag() {\n    return 'patternFill';\n  },\n\n  render(xmlStream, model) {\n    xmlStream.openNode('patternFill');\n    xmlStream.addAttribute('patternType', model.pattern);\n    if (model.fgColor) {\n      this.map.fgColor.render(xmlStream, model.fgColor);\n    }\n    if (model.bgColor) {\n      this.map.bgColor.render(xmlStream, model.bgColor);\n    }\n    xmlStream.closeNode();\n  },\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'patternFill':\n        this.model = {\n          type: 'pattern',\n          pattern: node.attributes.patternType,\n        };\n        return true;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n          return true;\n        }\n        return false;\n    }\n  },\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  },\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        if (this.parser.model) {\n          this.model[name] = this.parser.model;\n        }\n        this.parser = undefined;\n      }\n      return true;\n    }\n    return false;\n  },\n});\n\nconst GradientFillXform = function() {\n  this.map = {\n    stop: new StopXform(),\n  };\n  // if (model) {\n  //   this.gradient = model.gradient;\n  //   if (model.center) {\n  //     this.center = model.center;\n  //   }\n  //   if (model.degree !== undefined) {\n  //     this.degree = model.degree;\n  //   }\n  //   this.stops = model.stops.map(function(stop) { return new StopXform(stop); });\n  // } else {\n  //   this.stops = [];\n  // }\n};\nutils.inherits(GradientFillXform, BaseXform, {\n  get name() {\n    return 'gradient';\n  },\n  get tag() {\n    return 'gradientFill';\n  },\n\n  render(xmlStream, model) {\n    xmlStream.openNode('gradientFill');\n    switch (model.gradient) {\n      case 'angle':\n        xmlStream.addAttribute('degree', model.degree);\n        break;\n      case 'path':\n        xmlStream.addAttribute('type', 'path');\n        if (model.center.left) {\n          xmlStream.addAttribute('left', model.center.left);\n          if (model.center.right === undefined) {\n            xmlStream.addAttribute('right', model.center.left);\n          }\n        }\n        if (model.center.right) {\n          xmlStream.addAttribute('right', model.center.right);\n        }\n        if (model.center.top) {\n          xmlStream.addAttribute('top', model.center.top);\n          if (model.center.bottom === undefined) {\n            xmlStream.addAttribute('bottom', model.center.top);\n          }\n        }\n        if (model.center.bottom) {\n          xmlStream.addAttribute('bottom', model.center.bottom);\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    const stopXform = this.map.stop;\n    model.stops.forEach(stopModel => {\n      stopXform.render(xmlStream, stopModel);\n    });\n\n    xmlStream.closeNode();\n  },\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'gradientFill':\n        var model = (this.model = {\n          stops: [],\n        });\n        if (node.attributes.degree) {\n          model.gradient = 'angle';\n          model.degree = parseInt(node.attributes.degree, 10);\n        } else if (node.attributes.type === 'path') {\n          model.gradient = 'path';\n          model.center = {\n            left: node.attributes.left ? parseFloat(node.attributes.left) : 0,\n            top: node.attributes.top ? parseFloat(node.attributes.top) : 0,\n          };\n          if (node.attributes.right !== node.attributes.left) {\n            model.center.right = node.attributes.right ? parseFloat(node.attributes.right) : 0;\n          }\n          if (node.attributes.bottom !== node.attributes.top) {\n            model.center.bottom = node.attributes.bottom ? parseFloat(node.attributes.bottom) : 0;\n          }\n        }\n        return true;\n\n      case 'stop':\n        this.parser = this.map.stop;\n        this.parser.parseOpen(node);\n        return true;\n\n      default:\n        return false;\n    }\n  },\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  },\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.model.stops.push(this.parser.model);\n        this.parser = undefined;\n      }\n      return true;\n    }\n    return false;\n  },\n});\n\n// Fill encapsulates translation from fill model to/from xlsx\nconst FillXform = (module.exports = function() {\n  this.map = {\n    patternFill: new PatternFillXform(),\n    gradientFill: new GradientFillXform(),\n  };\n});\n\nutils.inherits(\n  FillXform,\n  BaseXform,\n  {\n    StopXform,\n    PatternFillXform,\n    GradientFillXform,\n  },\n  {\n    get tag() {\n      return 'fill';\n    },\n\n    render(xmlStream, model) {\n      xmlStream.addRollback();\n      xmlStream.openNode('fill');\n      switch (model.type) {\n        case 'pattern':\n          this.map.patternFill.render(xmlStream, model);\n          break;\n        case 'gradient':\n          this.map.gradientFill.render(xmlStream, model);\n          break;\n        default:\n          xmlStream.rollback();\n          return;\n      }\n      xmlStream.closeNode();\n      xmlStream.commit();\n    },\n\n    parseOpen(node) {\n      if (this.parser) {\n        this.parser.parseOpen(node);\n        return true;\n      }\n      switch (node.name) {\n        case 'fill':\n          this.model = {};\n          return true;\n        default:\n          this.parser = this.map[node.name];\n          if (this.parser) {\n            this.parser.parseOpen(node);\n            return true;\n          }\n          return false;\n      }\n    },\n\n    parseText(text) {\n      if (this.parser) {\n        this.parser.parseText(text);\n      }\n    },\n    parseClose(name) {\n      if (this.parser) {\n        if (!this.parser.parseClose(name)) {\n          this.model = this.parser.model;\n          this.model.type = this.parser.name;\n          this.parser = undefined;\n        }\n        return true;\n      }\n      return false;\n    },\n\n    validPatternValues: [\n      'none',\n      'solid',\n      'darkVertical',\n      'darkGray',\n      'mediumGray',\n      'lightGray',\n      'gray125',\n      'gray0625',\n      'darkHorizontal',\n      'darkVertical',\n      'darkDown',\n      'darkUp',\n      'darkGrid',\n      'darkTrellis',\n      'lightHorizontal',\n      'lightVertical',\n      'lightDown',\n      'lightUp',\n      'lightGrid',\n      'lightTrellis',\n      'lightGrid',\n    ].reduce((p, v) => {\n      p[v] = true;\n      return p;\n    }, {}),\n    validStyle(value) {\n      return this.validStyleValues[value];\n    },\n  }\n);\n"],"file":"fill-xform.js"}
{"version":3,"sources":["../../../../../lib/xlsx/xform/style/font-xform.js"],"names":["ColorXform","require","BooleanXform","IntegerXform","StringXform","UnderlineXform","_","utils","BaseXform","FontXform","module","exports","options","OPTIONS","map","b","prop","xform","tag","attr","i","u","charset","color","condense","extend","family","outline","vertAlign","scheme","shadow","strike","sz","fontNameTag","tagName","inherits","render","xmlStream","model","openNode","each","defn","closeNode","parseOpen","node","parser","name","parseText","text","parseClose","item","undefined"],"mappings":"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","sourcesContent":["'use strict';\n\nconst ColorXform = require('./color-xform');\nconst BooleanXform = require('../simple/boolean-xform');\nconst IntegerXform = require('../simple/integer-xform');\nconst StringXform = require('../simple/string-xform');\nconst UnderlineXform = require('./underline-xform');\n\nconst _ = require('../../../utils/under-dash');\nconst utils = require('../../../utils/utils');\nconst BaseXform = require('../base-xform');\n\n// Font encapsulates translation from font model to xlsx\nvar FontXform = (module.exports = function(options) {\n  this.options = options || FontXform.OPTIONS;\n\n  this.map = {\n    b: { prop: 'bold', xform: new BooleanXform({ tag: 'b', attr: 'val' }) },\n    i: { prop: 'italic', xform: new BooleanXform({ tag: 'i', attr: 'val' }) },\n    u: { prop: 'underline', xform: new UnderlineXform() },\n    charset: { prop: 'charset', xform: new IntegerXform({ tag: 'charset', attr: 'val' }) },\n    color: { prop: 'color', xform: new ColorXform() },\n    condense: { prop: 'condense', xform: new BooleanXform({ tag: 'condense', attr: 'val' }) },\n    extend: { prop: 'extend', xform: new BooleanXform({ tag: 'extend', attr: 'val' }) },\n    family: { prop: 'family', xform: new IntegerXform({ tag: 'family', attr: 'val' }) },\n    outline: { prop: 'outline', xform: new BooleanXform({ tag: 'outline', attr: 'val' }) },\n    vertAlign: { prop: 'vertAlign', xform: new StringXform({ tag: 'vertAlign', attr: 'val' }) },\n    scheme: { prop: 'scheme', xform: new StringXform({ tag: 'scheme', attr: 'val' }) },\n    shadow: { prop: 'shadow', xform: new BooleanXform({ tag: 'shadow', attr: 'val' }) },\n    strike: { prop: 'strike', xform: new BooleanXform({ tag: 'strike', attr: 'val' }) },\n    sz: { prop: 'size', xform: new IntegerXform({ tag: 'sz', attr: 'val' }) },\n  };\n  this.map[this.options.fontNameTag] = { prop: 'name', xform: new StringXform({ tag: this.options.fontNameTag, attr: 'val' }) };\n});\n\nFontXform.OPTIONS = {\n  tagName: 'font',\n  fontNameTag: 'name',\n};\n\nutils.inherits(FontXform, BaseXform, {\n  get tag() {\n    return this.options.tagName;\n  },\n\n  render(xmlStream, model) {\n    const map = this.map;\n\n    xmlStream.openNode(this.options.tagName);\n    _.each(this.map, (defn, tag) => {\n      map[tag].xform.render(xmlStream, model[defn.prop]);\n    });\n    xmlStream.closeNode();\n  },\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    if (this.map[node.name]) {\n      this.parser = this.map[node.name].xform;\n      return this.parser.parseOpen(node);\n    }\n    switch (node.name) {\n      case this.options.tagName:\n        this.model = {};\n        return true;\n      default:\n        return false;\n    }\n  },\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  },\n  parseClose(name) {\n    if (this.parser && !this.parser.parseClose(name)) {\n      const item = this.map[name];\n      if (this.parser.model) {\n        this.model[item.prop] = this.parser.model;\n      }\n      this.parser = undefined;\n      return true;\n    }\n    switch (name) {\n      case this.options.tagName:\n        return false;\n      default:\n        return true;\n    }\n  },\n});\n"],"file":"font-xform.js"}
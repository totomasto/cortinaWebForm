{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/cell-xform.js"],"names":["utils","require","BaseXform","Enums","Range","RichTextXform","getValueType","v","undefined","ValueType","Null","String","Number","Boolean","Date","text","hyperlink","Hyperlink","formula","Formula","error","Error","getEffectiveCellType","cell","type","result","CellXform","module","exports","richTextXForm","inherits","tag","prepare","model","options","styleId","styles","addStyleModel","style","sharedStrings","ssId","add","value","date1904","hyperlinks","push","Object","assign","address","target","tooltip","Merge","merges","formulae","sharedFormula","master","si","ref","expandToAddress","siFormulae","renderFormula","xmlStream","attrs","t","range","leafNode","addAttribute","dateToExcel","render","openNode","richText","self","forEach","closeNode","parseOpen","node","parser","name","attributes","r","s","parseInt","currentNode","parseText","parseClose","xmlDecode","parseFloat","reconcile","getStyleModel","getString","RichText","isDateFmt","numFmt","excelToDate","hyperlinkMap"],"mappings":"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","sourcesContent":["'use strict';\n\nconst utils = require('../../../utils/utils');\nconst BaseXform = require('../base-xform');\n\nconst Enums = require('../../../doc/enums');\nconst Range = require('../../../doc/range');\n\nconst RichTextXform = require('../strings/rich-text-xform');\n\nfunction getValueType(v) {\n  if (v === null || v === undefined) {\n    return Enums.ValueType.Null;\n  }\n  if (v instanceof String || typeof v === 'string') {\n    return Enums.ValueType.String;\n  }\n  if (typeof v === 'number') {\n    return Enums.ValueType.Number;\n  }\n  if (typeof v === 'boolean') {\n    return Enums.ValueType.Boolean;\n  }\n  if (v instanceof Date) {\n    return Enums.ValueType.Date;\n  }\n  if (v.text && v.hyperlink) {\n    return Enums.ValueType.Hyperlink;\n  }\n  if (v.formula) {\n    return Enums.ValueType.Formula;\n  }\n  if (v.error) {\n    return Enums.ValueType.Error;\n  }\n  throw new Error('I could not understand type of value');\n}\n\nfunction getEffectiveCellType(cell) {\n  switch (cell.type) {\n    case Enums.ValueType.Formula:\n      return getValueType(cell.result);\n    default:\n      return cell.type;\n  }\n}\n\nconst CellXform = (module.exports = function() {\n  this.richTextXForm = new RichTextXform();\n});\n\nutils.inherits(CellXform, BaseXform, {\n  get tag() {\n    return 'c';\n  },\n\n  prepare(model, options) {\n    const styleId = options.styles.addStyleModel(model.style || {}, getEffectiveCellType(model));\n    if (styleId) {\n      model.styleId = styleId;\n    }\n\n    switch (model.type) {\n      case Enums.ValueType.String:\n        if (options.sharedStrings) {\n          model.ssId = options.sharedStrings.add(model.value);\n        }\n        break;\n      case Enums.ValueType.Date:\n        if (options.date1904) {\n          model.date1904 = true;\n        }\n        break;\n      case Enums.ValueType.Hyperlink:\n        if (options.sharedStrings) {\n          model.ssId = options.sharedStrings.add(model.text);\n        }\n        options.hyperlinks.push(\n          Object.assign(\n            {\n              address: model.address,\n              target: model.hyperlink,\n            },\n            model.tooltip ? { tooltip: model.tooltip } : {}\n          )\n        );\n        break;\n      case Enums.ValueType.Merge:\n        options.merges.add(model);\n        break;\n      case Enums.ValueType.Formula:\n        if (options.date1904) {\n          // in case valueType is date\n          model.date1904 = true;\n        }\n        if (model.formula) {\n          options.formulae[model.address] = model;\n        } else if (model.sharedFormula) {\n          const master = options.formulae[model.sharedFormula];\n          if (!master) {\n            throw new Error('Shared Formula master must exist above and or left of clone');\n          }\n          if (master.si !== undefined) {\n            model.si = master.si;\n            master.ref.expandToAddress(model.address);\n          } else {\n            model.si = master.si = options.siFormulae++;\n            master.ref = new Range(master.address, model.address);\n          }\n        }\n        break;\n      default:\n        break;\n    }\n  },\n\n  renderFormula(xmlStream, model) {\n    let attrs = null;\n    if (model.ref) {\n      attrs = {\n        t: 'shared',\n        ref: model.ref.range,\n        si: model.si,\n      };\n    } else if (model.si !== undefined) {\n      attrs = {\n        t: 'shared',\n        si: model.si,\n      };\n    }\n    switch (getValueType(model.result)) {\n      case Enums.ValueType.Null: // ?\n        xmlStream.leafNode('f', attrs, model.formula);\n        break;\n      case Enums.ValueType.String:\n        // oddly, formula results don't ever use shared strings\n        xmlStream.addAttribute('t', 'str');\n        xmlStream.leafNode('f', attrs, model.formula);\n        xmlStream.leafNode('v', null, model.result);\n        break;\n      case Enums.ValueType.Number:\n        xmlStream.leafNode('f', attrs, model.formula);\n        xmlStream.leafNode('v', null, model.result);\n        break;\n      case Enums.ValueType.Boolean:\n        xmlStream.addAttribute('t', 'b');\n        xmlStream.leafNode('f', attrs, model.formula);\n        xmlStream.leafNode('v', null, model.result ? 1 : 0);\n        break;\n      case Enums.ValueType.Error:\n        xmlStream.addAttribute('t', 'e');\n        xmlStream.leafNode('f', attrs, model.formula);\n        xmlStream.leafNode('v', null, model.result.error);\n        break;\n      case Enums.ValueType.Date:\n        xmlStream.leafNode('f', attrs, model.formula);\n        xmlStream.leafNode('v', null, utils.dateToExcel(model.result, model.date1904));\n        break;\n      // case Enums.ValueType.Hyperlink: // ??\n      // case Enums.ValueType.Formula:\n      default:\n        throw new Error('I could not understand type of value');\n    }\n  },\n\n  render(xmlStream, model) {\n    if (model.type === Enums.ValueType.Null && !model.styleId) {\n      // if null and no style, exit\n      return;\n    }\n\n    xmlStream.openNode('c');\n    xmlStream.addAttribute('r', model.address);\n\n    if (model.styleId) {\n      xmlStream.addAttribute('s', model.styleId);\n    }\n\n    switch (model.type) {\n      case Enums.ValueType.Null:\n        break;\n\n      case Enums.ValueType.Number:\n        xmlStream.leafNode('v', null, model.value);\n        break;\n\n      case Enums.ValueType.Boolean:\n        xmlStream.addAttribute('t', 'b');\n        xmlStream.leafNode('v', null, model.value ? '1' : '0');\n        break;\n\n      case Enums.ValueType.Error:\n        xmlStream.addAttribute('t', 'e');\n        xmlStream.leafNode('v', null, model.value.error);\n        break;\n\n      case Enums.ValueType.String:\n        if (model.ssId !== undefined) {\n          xmlStream.addAttribute('t', 's');\n          xmlStream.leafNode('v', null, model.ssId);\n        } else if (model.value && model.value.richText) {\n          xmlStream.addAttribute('t', 'inlineStr');\n          xmlStream.openNode('is');\n          const self = this;\n          model.value.richText.forEach(text => {\n            self.richTextXForm.render(xmlStream, text);\n          });\n          xmlStream.closeNode('is');\n        } else {\n          xmlStream.addAttribute('t', 'str');\n          xmlStream.leafNode('v', null, model.value);\n        }\n        break;\n\n      case Enums.ValueType.Date:\n        xmlStream.leafNode('v', null, utils.dateToExcel(model.value, model.date1904));\n        break;\n\n      case Enums.ValueType.Hyperlink:\n        if (model.ssId !== undefined) {\n          xmlStream.addAttribute('t', 's');\n          xmlStream.leafNode('v', null, model.ssId);\n        } else {\n          xmlStream.addAttribute('t', 'str');\n          xmlStream.leafNode('v', null, model.text);\n        }\n        break;\n\n      case Enums.ValueType.Formula:\n        this.renderFormula(xmlStream, model);\n        break;\n\n      case Enums.ValueType.Merge:\n        // nothing to add\n        break;\n\n      default:\n        break;\n    }\n\n    xmlStream.closeNode(); // </c>\n  },\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'c':\n        // const address = colCache.decodeAddress(node.attributes.r);\n        this.model = {\n          address: node.attributes.r,\n        };\n        this.t = node.attributes.t;\n        if (node.attributes.s) {\n          this.model.styleId = parseInt(node.attributes.s, 10);\n        }\n        return true;\n\n      case 'f':\n        this.currentNode = 'f';\n        this.model.si = node.attributes.si;\n        if (node.attributes.t === 'shared') {\n          this.model.sharedFormula = true;\n        }\n        this.model.ref = node.attributes.ref;\n        return true;\n\n      case 'v':\n        this.currentNode = 'v';\n        return true;\n\n      case 't':\n        this.currentNode = 't';\n        return true;\n\n      case 'r':\n        this.parser = this.richTextXForm;\n        this.parser.parseOpen(node);\n        return true;\n\n      default:\n        return false;\n    }\n  },\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n      return;\n    }\n    switch (this.currentNode) {\n      case 'f':\n        this.model.formula = this.model.formula ? this.model.formula + text : text;\n        break;\n      case 'v':\n      case 't':\n        if (this.model.value && this.model.value.richText) {\n          this.model.value.richText.text = this.model.value.richText.text ? this.model.value.richText.text + text : text;\n        } else {\n          this.model.value = this.model.value ? this.model.value + text : text;\n        }\n        break;\n      default:\n        break;\n    }\n  },\n  parseClose(name) {\n    switch (name) {\n      case 'c':\n        const model = this.model;\n\n        // first guess on cell type\n        if (model.formula || model.sharedFormula) {\n          model.type = Enums.ValueType.Formula;\n          if (model.value) {\n            if (this.t === 'str') {\n              model.result = utils.xmlDecode(model.value);\n            } else if (this.t === 'b') {\n              model.result = parseInt(model.value, 10) !== 0;\n            } else if (this.t === 'e') {\n              model.result = { error: model.value };\n            } else {\n              model.result = parseFloat(model.value);\n            }\n            model.value = undefined;\n          }\n        } else if (model.value !== undefined) {\n          switch (this.t) {\n            case 's':\n              model.type = Enums.ValueType.String;\n              model.value = parseInt(model.value, 10);\n              break;\n            case 'str':\n              model.type = Enums.ValueType.String;\n              model.value = utils.xmlDecode(model.value);\n              break;\n            case 'inlineStr':\n              model.type = Enums.ValueType.String;\n              break;\n            case 'b':\n              model.type = Enums.ValueType.Boolean;\n              model.value = parseInt(model.value, 10) !== 0;\n              break;\n            case 'e':\n              model.type = Enums.ValueType.Error;\n              model.value = { error: model.value };\n              break;\n            default:\n              model.type = Enums.ValueType.Number;\n              model.value = parseFloat(model.value);\n              break;\n          }\n        } else if (model.styleId) {\n          model.type = Enums.ValueType.Null;\n        } else {\n          model.type = Enums.ValueType.Merge;\n        }\n        return false;\n      case 'f':\n      case 'v':\n      case 'is':\n        this.currentNode = undefined;\n        return true;\n      case 't':\n        if (this.parser) {\n          this.parser.parseClose(name);\n          return true;\n        }\n        this.currentNode = undefined;\n        return true;\n\n      case 'r':\n        this.model.value = this.model.value || {};\n        this.model.value.richText = this.model.value.richText || [];\n        this.model.value.richText.push(this.parser.model);\n        this.parser = undefined;\n        this.currentNode = undefined;\n        return true;\n      default:\n        if (this.parser) {\n          this.parser.parseClose(name);\n          return true;\n        }\n        return false;\n    }\n  },\n\n  reconcile(model, options) {\n    const style = model.styleId && options.styles.getStyleModel(model.styleId);\n    if (style) {\n      model.style = style;\n    }\n    if (model.styleId !== undefined) {\n      model.styleId = undefined;\n    }\n\n    switch (model.type) {\n      case Enums.ValueType.String:\n        if (typeof model.value === 'number') {\n          model.value = options.sharedStrings.getString(model.value);\n        }\n        if (model.value.richText) {\n          model.type = Enums.ValueType.RichText;\n        }\n        break;\n      case Enums.ValueType.Number:\n        if (style && utils.isDateFmt(style.numFmt)) {\n          model.type = Enums.ValueType.Date;\n          model.value = utils.excelToDate(model.value, options.date1904);\n        }\n        break;\n      case Enums.ValueType.Formula:\n        if (model.result !== undefined && style && utils.isDateFmt(style.numFmt)) {\n          model.result = utils.excelToDate(model.result, options.date1904);\n        }\n        if (model.sharedFormula) {\n          if (model.formula) {\n            options.formulae[model.si] = model;\n            delete model.sharedFormula;\n          } else {\n            model.sharedFormula = options.formulae[model.si].address;\n          }\n          delete model.si;\n        }\n        break;\n      default:\n        break;\n    }\n\n    // look for hyperlink\n    const hyperlink = options.hyperlinkMap[model.address];\n    if (hyperlink) {\n      if (model.type === Enums.ValueType.Formula) {\n        model.text = model.result;\n        model.result = undefined;\n      } else {\n        model.text = model.value;\n        model.value = undefined;\n      }\n      model.type = Enums.ValueType.Hyperlink;\n      model.hyperlink = hyperlink;\n    }\n  },\n});\n"],"file":"cell-xform.js"}